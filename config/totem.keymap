//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define Base        0
#define Media       1
#define Nav         2
#define Mouse       3
#define Sym         4
#define Num         5
#define Fun         6
#define Button      7
#define Game        8
#define Gameplus    9

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Copy {
            bindings = <&kp LC(C)>;
            key-positions = <22 23>;
        };

        Paste {
            bindings = <&kp LC(V)>;
            key-positions = <24 23>;
        };

        Cut {
            bindings = <&kp LC(X)>;
            key-positions = <22 24>;
        };

        PasteNoFormat {
            bindings = <&kp LC(LS(V))>;
            key-positions = <22 23 24>;
        };

        Caps {
            bindings = <&kp CAPS>;
            key-positions = <13 16>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <13 12 11>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <18 17 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
         &kp Q       &kp W       &kp F        &kp P            &kp B         &kp J      &kp L        &kp U        &kp Y       &kp SEMI
         &hm LGUI A  &hm LALT R  &hm LCTRL S  &hm LSHIFT T     &kp G         &kp M      &hm RSHFT N  &hm RCTRL E  &hm RALT I  &hm RGUI O
&kp ESC  &kp Z       &kp X       &kp C        &kp D            &kp V         &kp K      &kp H        &kp COMMA    &kp DOT     &kp SLASH   &kp SQT
                                 &lt 3 DEL    &lt 2 BACKSPACE  &kp LSHIFT    &kp ENTER  &lt 1 SPACE  &kp TAB
            >;
        };

        NumNav {
            label = "NumNav";
            bindings = <
        &kp PLUS   &kp N7  &kp N8  &kp N9  &kp ASTRK    &trans  &kp PAGE_UP    &kp UP    &kp HOME   &trans
        &kp N0     &kp N4  &kp N5  &kp N6  &kp EQUAL    &trans  &kp LEFT       &kp DOWN  &kp RIGHT  &trans
&trans  &kp MINUS  &kp N1  &kp N2  &kp N3  &kp FSLH     &trans  &kp PAGE_DOWN  &trans    &kp END    &trans  &trans
                           &trans  &trans  &kp DOT      &trans  &trans         &trans
            >;
        };

        Sym {
            label = "Sym";
            bindings = <
        &kp EXCL   &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp STAR  &kp MINUS  &kp EQUAL
        &kp GRAVE  &trans  &kp LPAR  &kp RPAR    &trans         &trans     &kp LBRC       &kp RBRC  &trans     &kp BSLH
&trans  &trans     &trans  &kp LBKT  &kp RBKT    &trans         &trans     &trans         &trans    &trans     &trans     &trans
                           &trans    &trans      &trans         &trans     &trans         &trans
            >;
        };

        Func {
            label = "Func";
            bindings = <
            &trans  &trans  &kp C_BRI_DN  &kp C_BRI_UP  &bt BT_SEL 0    &trans      &trans            &trans      &bootloader  &trans
            &trans  &trans  &kp C_VOL_DN  &kp C_VOL_UP  &bt BT_SEL 1    &trans      &kp RSHIFT        &kp RCTRL   &kp RALT     &kp RGUI
&bt BT_CLR  &trans  &trans  &trans        &to 4         &bt BT_SEL 2    &trans      &trans            &trans      &trans       &trans    &trans
                            &trans        &trans        &trans          &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT
            >;
        };

        Gaming {
            bindings = <
            &trans          &kp Q   &kp W   &kp E      &kp R     &trans  &trans     &kp UP    &trans     &trans
            &kp LEFT_SHIFT  &kp A   &kp S   &kp D      &mo 5     &trans  &kp LEFT   &kp DOWN  &kp RIGHT  &trans
&kp ESCAPE  &trans          &trans  &trans  &trans     &trans    &trans  &trans     &trans    &trans     &trans  &to 0
                                    &trans  &kp SPACE  &trans    &trans  &kp SPACE  &trans
            >;

            label = "Gaming";
        };

        Gaming+ {
            bindings = <
         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &trans  &trans  &trans  &trans  &kp LC(RA(DEL))
         &kp L         &kp O         &kp Y         &kp K         &kp G           &kp F5  &trans  &trans  &trans  &trans
&kp TAB  &to 0         &trans        &trans        &kp NUMBER_6  &kp NUMBER_7    &trans  &trans  &trans  &trans  &trans           &kp LA(F4)
                                     &kp J         &kp I         &kp M           &trans  &trans  &trans
            >;

            label = "Gaming+";
        };
    };
};
